openapi: 3.0.0
info:
  title: API
  description: >-
    This is the public API for nstack.io


    Setup an application and use Application-Id and Rest-Api-Key
  contact: {help@nstack.io}
  version: '2.5'
servers:
  - url: https://nstack.io
    variables: {}
paths:
  /api/v2/scropper:
    post:
      tags:
        - Scropper
      summary: Getfocalpoint
      description: "Get focal point on a image\n\n\n**Initial response time can be 15sec in case you hit a cold container**\n\n\n#### Request details\nMethod: `POST`\n\nURL: `api/v2/content/scropper`\n\n#### Headers\n`X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_\n\n`X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_\n\n#### Post params\n`url` (string) **required if no file, only jpg, png** \n\n`file` (file, max 30mb) **required if no url, only jpg, png** \n\n`data-center` (string) **optional, default: aws:ireland** **(Options: aws:ireland)** \n\n#### Response codes(s)\n`200` OK\n\n`412` Validation error\n\n`500` Internal server error _Please read response message_"
      operationId: Getfocalpoint
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
                - url
                - data-center
              type: object
              properties:
                url:
                  type: string
                data-center:
                  type: string
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scropper'
      deprecated: false
  /api/v2/stagger:
    post:
      tags:
        - Stagger
      summary: Gettag
      description: "Get a tag from a text (Feedback / bug report)\n\n\n**Initial response time can be 15sec in case you hit a cold container**\n\n\n#### Request details\nMethod: `POST`\n\nURL: `api/v2/content/stagger`\n\n#### Headers\n`X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_\n\n`X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_\n\n#### Post params\n`text` (string) **required**\n\n`data-center` (string) **optional, default: aws:ireland** **(Options: aws:ireland)** \n\n#### Response codes(s)\n`200` OK\n\n`412` Validation error\n\n`500` Internal server error _Please read response message_"
      operationId: Gettag
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
                - text
                - data-center
              type: object
              properties:
                text:
                  type: string
                data-center:
                  type: string
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/content/collections/{collectionId}:
    get:
      tags:
        - Collections
      summary: View
      description: >-
        Get a default type of content collection


        #### Request details

        Method: `GET`


        URL: `api/v2/content/responses/{collection_id}`


        #### Headers

        `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_


        `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_


        #### URL Parameters

        `collection_id` (int) **required** _ID of content collection_

      operationId: View
      parameters:
        - name: collectionId
          in: path
          required: true
          description: Parameter description in CommonMark or HTML.
          schema:
            type: integer
            format: int64
            minimum: 1
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: collection_id
          required: true
          in: path
          description: 'Collection ID'
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: 'OK'
          headers: {}
        404:
          description: 'Entity not found'
        500:
          description: 'Internal server error _Please read response message_'
      deprecated: false
  /api/v2/content/collections/{collectionId}/items:
    post:
      tags:
        - Collections
      summary: Createitem
      description: >-
        Create a new item to a array type collection

        #### Request details

        Method: `POST`


        URL: `api/v2/content/responses/{collection_id}/items`


        #### Headers

        `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_


        `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_


        #### URL Parameters

        `collection_id` (int) **required** _ID of content collection_


        #### Post params


        `All required keys`
      operationId: Createitem
      parameters:
        - name: collectionId
          in: path
          required: true
          description: Parameter description in CommonMark or HTML.
          schema:
            type: integer
            format: int64
            minimum: 1

        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: collection_id
          in: path
          description: 'Collection Id'
          style: simple
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
                - k0int
                - key1string
                - key2float
                - key3wysiwygsim
                - key4asset
                - key5boolean
                - key6wysiwygadvanced
              type: object
              properties:
                k0int:
                  type: integer
                  format: int32
                key1string:
                  type: string
                key2float:
                  type: number
                  format: double
                key3wysiwygsim:
                  type: string
                key4asset:
                  type: string
                key5boolean:
                  type: boolean
                key6wysiwygadvanced:
                  type: string
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: 'OK'
          headers: {}
        401:
          description: 'Collection does not have write access for api'
        404:
          description: 'Entity not found'
        412:
          description: 'Precondition failed _Please read response message_'
        500:
          description: 'Internal server error _Please read response message_'
      deprecated: false
  /api/v2/content/collections/{collectionId/items/{itemId}:
    delete:
      tags:
        - Collections
      summary: Deleteitem
      description: "Create a new item to a array type collection\n#### Request details\nMethod: `DELETE`\n\nURL: `api/v2/content/responses/{collection_id}/items{item_id}`\n\n#### Headers\n`X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_\n\n`X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_\n\n#### URL Parameters\n`collection_id` (int) **required** _ID of content collection_\n\n`item_id` (int) **required** _ID of content collection item_\n\n#### Response codes(s)\n`200` OK\n\n`401` Collection does not have write access for api \n\n`404` Entity not found\n\n`500` Internal server error _Please read response message_"
      operationId: Deleteitem
      parameters:
        - name: collectionId
          in: path
          required: true
          description: collectionId
          schema:
            type: integer
            format: int64
            minimum: 1
        - name: itemId
          in: path
          required: true
          description: itemId
          schema:
            type: integer
            format: int64
            minimum: 1
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: collection_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: item_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/content/collections/{collectionId}/items/{itemId}/update:
    post:
      tags:
        - Collections
      summary: Update
      description: "Create a new item to a array type collection\n#### Request details\nMethod: `POST`\n\nURL: `api/v2/content/responses/{collection_id}/items`\n\n#### Headers\n`X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_\n\n`X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_\n\n#### URL Parameters\n`collection_id` (int) **required** _ID of content collection_\n\n#### Post params\n\n`All required keys`\n\n#### Response codes(s)\n`200` OK\n\n`401` Collectio does not have write access for api \n\n`404` Entity not found\n\n`412` Precondition failed _Please read response message_\n\n`500` Internal server error _Please read response message_"
      operationId: Update
      parameters:
        - name: collectionId
          in: path
          required: true
          description: collectionId
          schema:
            type: integer
            format: int64
            minimum: 1
        - name: itemId
          in: path
          required: true
          description: itemId
          schema:
            type: integer
            format: int64
            minimum: 1
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: collection_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: item_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
                - k0int
                - key1string
                - key2float
                - key3wysiwygsim
                - key4asset
                - key5boolean
                - key6wysiwygadvanced
              type: object
              properties:
                k0int:
                  type: integer
                  format: int32
                key1string:
                  type: string
                key2float:
                  type: number
                  format: double
                key3wysiwygsim:
                  type: string
                key4asset:
                  type: string
                key5boolean:
                  type: boolean
                key6wysiwygadvanced:
                  type: string
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/content/collections/{collectionId}/items/{itemId}:
    get:
      tags:
        - Collections
      summary: Viewitem
      description: "Create a new item to a array type collection\n#### Request details\nMethod: `GET`\n\nURL: `api/v2/content/responses/{collection_id}/items{item_id}`\n\n#### Headers\n`X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_\n\n`X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_\n\n#### URL Parameters\n`collection_id` (int) **required** _ID of content collection_\n\n`item_id` (int) **required** _ID of content collection item_\n\n#### Response codes(s)\n`200` OK\n\n`401` Collection does not have write access for api \n`445` Entity not found"
      operationId: Viewitem
      parameters:
        - name: collectionId
          in: path
          required: true
          description: collectionId
          schema:
            type: integer
            format: int64
            minimum: 1
        - name: itemId
          in: path
          required: true
          description: itemId
          schema:
            type: integer
            format: int64
            minimum: 1
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: collection_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: item_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: ''
          headers: {}
        401:
          description: 'Collection does not have write access for api'
        445:
          description: 'Entity not found'
      deprecated: false
  /api/v2/content/responses/15:
    get:
      tags:
        - Responses
      summary: Show
      description: >-
        Get one response


        #### Request details

        Method: `GET`


        URL: `api/v2/content/responses/{id_or_slug}`


        #### Headers

        `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_


        `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_


        #### URL Parameters

        `id_or_slug` (string/int) **required** _ID or slug of content type [15, "terms", "about"]_


        #### Query params

        `data` (bool) **option** _defaul true - should the object be in data_


        #### Response codes(s)

        `200` OK


        `404` Entity not found


        `500` Internal server error _Please read response message_
      operationId: Show
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/content/files:
    post:
      tags:
        - Files
      summary: Store
      description: "Store a file\n\n#### Request details\nMethod: `POST`\n\nURL: `api/v2/content/files`\n\n#### Headers\n`X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_\n\n`X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_\n\n#### Post params\n`name` (string) **required** \n\n`tags` (string, comma seperated) **optional** \n\n`gone_at` (date-time 2019-01-01 00:00:00) **optional** \n\n`privacy` (string [public,public-cdn,private,private-password]) **required** \n\n`file` (file, max 30mb) **required** \n\n#### Response codes(s)\n`200` OK\n\n`412` Validation error\n\n`500` Internal server error _Please read response message_"
      operationId: Store
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
                - name
                - tags
                - gone_at
                - file
                - privacy
              type: object
              properties:
                name:
                  type: string
                tags:
                  type: string
                gone_at:
                  type: string
                file:
                  type: string
                privacy:
                  type: string
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/content/localize/mobile/languages:
    get:
      tags:
        - Localize
      summary: Indexlanguages
      description: "Get available languages for a platfom\n\n#### Request details\n\nMethod:    `GET`\n\nURL:    `/api/v1/content/localize/{platform-slug}/languages`\n\n#### Headers \n\n`X-Application-Id`\n\n`X-Rest-Api-Key`\n\n#### Query params\n`show_inactive_languages` (bool)\n\n#### URL Parameters\n`platform-slug` (string) **required**\n\n#### Response codes(s)\n\n`200` OK\n\n`404` Entity not found"
      operationId: Indexlanguages
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        200:
          description: ''
          headers:
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.15.8
            Transfer-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: chunked
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Cache-Control:
              content:
                text/plain:
                  schema:
                    type: string
                  example: no-cache, private
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Tue, 13 Aug 2019 11:59:25 GMT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Indexlanguages'
              example:
                data:
                  - id: 11
                    name: English (UK)
                    locale: en-GB
                    direction: LRM
                    is_default: true
                    is_best_fit: true
                  - id: 14
                    name: Spanish (Spain)
                    locale: es-ES
                    direction: LRM
                    is_default: false
                    is_best_fit: false
                  - id: 6
                    name: Danish
                    locale: da-DK
                    direction: LRM
                    is_default: false
                    is_best_fit: false
      deprecated: false
  /api/v2/content/localize/mobile/languages/best_fit:
    get:
      tags:
        - Localize
      summary: Languagebestfit
      description: "Get best fit language from accept-language header\n\n#### Request details\nMethod:    `GET`\n\nURL:    `/api/v1/content/localize/{platform-slug}/languages/best_fit`\n\n#### Headers \n`X-Application-Id`\n\n`X-Rest-Api-Key`\n\n`Accept-Language or X-Accept-Language`\n\n#### URL Parameters\n`platform-slug` (string) **required**\n\n#### Response codes(s)\n\n`200` OK\n\n`404` Entity not found"
      operationId: Languagebestfit
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        200:
          description: ''
          headers:
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.15.8
            Transfer-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: chunked
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Cache-Control:
              content:
                text/plain:
                  schema:
                    type: string
                  example: no-cache, private
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Tue, 13 Aug 2019 11:59:34 GMT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Languagebestfit'
              example:
                data:
                  id: 11
                  name: English (UK)
                  locale: en-GB
                  direction: LRM
                  is_default: false
                  is_best_fit: false
                meta:
                  Accept-Language: null
      deprecated: false
  /api/v2/content/localize/resources/platforms/mobile:
    get:
      tags:
        - Localize
      summary: Indexresource
      description: "#### Request details\n\nMethod:    `GET`\n\nURL:    `/api/v2/content/localize/resources/platforms/{platformSlug}`\n\n### Url param\n\n`platformSlug` (string) **required** *eg: mobile, backend, web*\n\n#### Headers \n`X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_\n\n`X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_\n\n\n### Query\n\n`last_updated` (date time, ISO8601) **optional** *eg: 2019-06-21T08%3A35%3A24%2B00%3A00*\n - *Remember to url encode it*\n - *Set timestamp from last app open (when localization has been synced), this will calculate which localizations should be updated*\n\n`dev` (bool) **option, default false**\n - *if true, bypass publishes and only use newest resource (set of key/values)*\n\n\n#### Response codes(s)\n\n`200` OK\n\n`404` platform not found"
      operationId: Indexresource
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        200:
          description: ''
          headers:
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.15.8
            Transfer-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: chunked
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Cache-Control:
              content:
                text/plain:
                  schema:
                    type: string
                  example: no-cache, private
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Tue, 13 Aug 2019 11:47:57 GMT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Indexresource'
              example:
                data:
                  - id: 16
                    url: http://nodes-cdn-development.imgix.net/nstack/data/localize-publishes/publish-16-h4j9oHHi_IRrFIjA0B0.json
                    last_updated_at: 2019-07-05T08:12:35+00:00
                    should_update: true
                    language:
                      id: 11
                      name: English (UK)
                      locale: en-GB
                      direction: LRM
                      is_default: true
                      is_best_fit: true
                  - id: 249
                    url: http://nodes-cdn-development.imgix.net/nstack/data/localize-publishes/publish-249-ge7QmlAC_B3yiR4JJrf.json
                    last_updated_at: 2019-07-03T12:46:38+00:00
                    should_update: true
                    language:
                      id: 14
                      name: Spanish (Spain)
                      locale: es-ES
                      direction: LRM
                      is_default: false
                      is_best_fit: false
                  - id: 307
                    url: http://nstack.test/api/v2/content/localize/resources/307
                    last_updated_at: 2019-07-03T13:09:23+00:00
                    should_update: true
                    language:
                      id: 6
                      name: Danish
                      locale: da-DK
                      direction: LRM
                      is_default: false
                      is_best_fit: false
      deprecated: false
  /api/v2/content/localize/resources/44:
    get:
      tags:
        - Localize
      summary: Showresource
      description: >-
        #### Request details


        Method:    `GET`


        URL:    `/api/v2/content/localize/resources/{id}`


        #### Response codes(s)


        `200` OK


        `404` Not found
      operationId: Showresource
      parameters: []
      responses:
        200:
          description: ''
          headers:
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.15.8
            Transfer-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: chunked
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Cache-Control:
              content:
                text/plain:
                  schema:
                    type: string
                  example: no-cache, private
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Tue, 13 Aug 2019 11:54:05 GMT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Showresource'
              example:
                data:
                  default:
                    ok: Ok
                    required: Required
                    cancel: Cancel
                    done: Done
                    male: Male
                    female: Female
                    errorRandomErrorAlertText: An error has occurred
                    ago: ago
                    now: now
                    open: Open
                    openLinkTitle: Open link?
                    openLinkMessage: This will open the link in a web browser outside of this app. Do you want to continue?
                    justNow: just now
                    nity: World's Largest Tattoo Community
                    google: Google
                    facebook: Facebook
                    twitter: Twitter
                    loginOrSignUpWithEmail: Log in or sign up with email
                    terms: Terms
                    youAgreeBySigningUp: By signing up, you agree to our Terms & Privacy Policy
                    privacyPolicy: Privacy Policy
                    continueWith: Continue with
                    continueWithEmail: Or Continue with E-mail
                  createUser1:
                    title: Create account
                    username: Username
                    email: Email
                    usernamePlaceholder: Type here
                    emailPlaceholder: Type here
                    signupButton: Sign up
                    usernameNotAvailableAlertTitle: Username isn't available
                    usernameNotAvailableAlertMessage: This username is already in use. Please try another username or variation.
                    emailNotAvailableAlertMessage: This email is already in use. Please try another email or variation.
                    emailNotAvailableAlertTitle: Email isn't available
                    usernameAndEmailNotAvailableAlertMessage: This username and email are already in use. Please try another username and email or variation of these.
                    describeTattooTitle: __describeTattooTitle
                    describeTattooHint: __describeTattooHint
                    requestNowButton: __requestNowButton
                    contactInformationButton: __contactInformationButton
                    bookingConfirmationTitle: __bookingConfirmationTitle
                    bookingConfirmationSubtitle: __bookingConfirmationSubtitle
                    bookingConfirmationButtonLabel: __bookingConfirmationButtonLabel
                  endOfFeed:
                    discoverMore: __discoverMore
                    tattoos: __tattoos
                meta:
                  language:
                    id: 11
                    name: English (UK)
                    locale: en-GB
                    direction: LRM
                    is_default: false
                    is_best_fit: false
                  platform:
                    id: 15
                    slug: mobile
      deprecated: false
  /api/v2/content/localize/proposals:
    post:
      tags:
        - Localize
      summary: Storeproposal
      description: "#### Request details\n\nMethod:    `POST`\n\nURL:    `/api/v2/content/localize/proposals`\n\n#### Post params\n`key` (string) **required** \n\n`section` (string) **required** \n\n`value` (string) **required** \n\n`locale` (string) **required**  *eg: da-DK, en-GB*\n\n`platform` (string) **required** *eg: mobile, backend, web*\n\n#### Response codes(s)\n\n`201` Created\n\n`412` Preconitions failed"
      operationId: Storeproposal
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
                - key
                - value
                - locale
                - platform
                - guid
                - section
              type: object
              properties:
                key:
                  type: string
                value:
                  type: string
                locale:
                  type: string
                platform:
                  type: string
                guid:
                  type: string
                section:
                  type: string
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
    get:
      tags:
        - Localize
      summary: Indexproposal
      description: >-
        #### Request details


        Method:    `GET`


        URL:    `/api/v2/content/localize/proposals`


        #### Post params

        `state` (string) **optional, default unaccepted** *Options: unaccepted, accepted, all*


        `guid` (string) **optional** shows if the proposal is deletable or not for the specified guid


        #### Response codes(s)


        `200` OK
      operationId: Indexproposal
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/content/localize/proposals/9:
    delete:
      tags:
        - Localize
      summary: Deleteproposal
      description: "Delete a specified proposal\n\n#### Request details\n\nMethod:    `DELETE`\n\nURL:    `{{nstackUrl}}/api/v2/content/localize/proposals/{{proposalId}}`\n\n#### Headers \n\n`X-Application-Id`\n\n`X-Rest-Api-Key`\n\n#### Query params\n`guid` (string) **required**\n\n#### URL Parameters\n`proposalId` (int) **required**\n\n#### Response codes(s)\n\n`200` OK\n\n`404` Entity not found\n\n`401` Invalid guid"
      operationId: Deleteproposal
      parameters:
        - name: guid
          in: query
          description: ''
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/content/dashboards/visualizations/visualization-5d0dbc254bc83:
    get:
      tags:
        - Dashboards
      summary: Visualization
      description: "Get visualization\n\n#### Request details\nMethod: `GET`\n\nURL: `api/v2/content/dashboards/visualizations/{key}`\n\n#### URL Parameters\n`key` (string) **required**\n\n### Query parameters\n\n`mode` (string) **Optional** \n - standard (default), using cache data\n - fresh, force using fresh data\n - test, fake data\n\n#### Response codes(s)\n`200` OK\n\n`404` Entity not found"
      operationId: Visualization
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/content/dashboards/DAS-ad21e084-ae03-4486-a5ec-d837dfc56fd2:
    get:
      tags:
        - Dashboards
      summary: Dashboard
      description: "Get Dashboard\n\n#### Request details\nMethod: `GET`\n\nURL: `api/v2/content/dashboards/{key}`\n\n#### URL Parameters\n`key` (string) **required**\n\n`mode` (string) **Optional** \n - standard (default), using cache data\n - fresh, force using fresh data\n - test, fake data\n\n#### Response codes(s)\n`200` OK\n\n`404` Entity not found"
      operationId: Dashboard
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: Content-Type
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/content/terms:
    get:
      tags:
        - Terms
      summary: Index
      description: >-
        List all Terms


        #### Request details

        Method: `GET`


        URL: `api/v2/content/terms`


        #### Headers

        `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_


        `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_



        #### Response codes(s)

        `200` OK


        `404` Entity not found


        `500` Internal server error _Please read response message_
      operationId: Index
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: N-Meta
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/content/terms/some-terms-1/versions:
    get:
      tags:
        - Terms
      summary: Indexversions
      description: >-
        List all Version


        #### Request details

        Method: `GET`


        URL: `api/v2/content/terms/{slugOrId}/versions`


        #### Headers

        `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_


        `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_


        #### Response codes(s)

        `200` OK


        `404` Entity not found


        `500` Internal server error _Please read response message_
      operationId: Indexversions
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: N-Meta
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/content/terms/some-terms-1/versions/newest:
    get:
      tags:
        - Terms
      summary: Newestversion
      description: >-
        List all Version


        #### Request details

        Method: `GET`


        URL: `api/v2/content/terms/{slugOrId}/versions/newest`


        #### Headers

        `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_


        `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_


        #### Response codes(s)

        `200` OK


        `404` Entity not found


        `500` Internal server error _Please read response message_
      operationId: Newestversion
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: N-Meta
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/content/terms/versions/5:
    get:
      tags:
        - Terms
      summary: Showversion
      description: >-
        List all Version


        #### Request details

        Method: `GET`


        URL: `api/v2/content/terms/versions/{id}`


        #### Headers

        `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_


        `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_


        `Accept-Language` (string) **optional** _Set this to get best fit locale_


        #### Query params

        `guid` (string) **optional** _If you want `has_viewed` to be calculated_


        #### Response codes(s)

        `200` OK


        `404` Entity not found


        `500` Internal server error _Please read response message_
      operationId: Showversion
      parameters:
        - name: guid
          in: query
          description: ''
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: N-Meta
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/content/terms/versions/views:
    post:
      tags:
        - Terms
      summary: StoreView
      description: >-
        Create a new View

        #### Request details

        Method: `POST`


        URL: `/api/v2/content/terms/versions/{id}/views`


        #### Headers

        `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_


        `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_


        #### Post params

        `term_version_id` (int) **required** _ID of Terms Version_


        `guid` (string) **required** _GUID_


        `identifier` (string) **required**


        `locale` (string) **required**


        #### Response codes(s)

        `200` OK


        `412` Precondition failed _Please read response message_


        `500` Internal server error _Please read response message_
      operationId: StoreView
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: N-Meta
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
                - term_version_id
                - guid
                - identifier
                - locale
              type: object
              properties:
                term_version_id:
                  type: integer
                  format: int32
                guid:
                  type: string
                identifier:
                  type: string
                locale:
                  type: string
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/notify/updates:
    get:
      tags:
        - Version control
      summary: Indexupdate
      description: "Get app updated\n\n#### Request details\nMethod:    `GET`\n\nURL:    `/api/v2/notify/updates`\n\n#### Headers \n`X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_\n\n`X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_\n\n#### Query parameters\n`platform` (string) **required** _[\"ios\", \"android\", \"windows\"]_\n\n`current_version` (string) **required** _Current version of app making the request_\n\n`last_version` (string) _[?]_\n\n`test` (bool) _Enable test mode, false equals production_\n\n#### Response codes\n`200` OK\n\n`412` Precondition failed"
      operationId: Indexupdate
      parameters:
        - name: platform
          in: query
          description: ''
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: current_version
          in: query
          description: ''
          required: true
          style: form
          explode: true
          schema:
            type: number
            format: double
        - name: last_version
          in: query
          description: ''
          required: true
          style: form
          explode: true
          schema:
            type: number
            format: double
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionControl'
              example:
                update: force
                update_versions:
                  - id: 7
                    version: 2.0.0.13b
                    update: force
                    new_in_version: false
                    change_log:
                    file_url:
                  - id: 5
                    version: 2.0.1.1111
                    update: 'on'
                    new_in_version: false
                    change_log:
                    file_url:
                  - id: 4
                    version: 2.0.0.0
                    update: 'on'
                    new_in_version: false
                    change_log: aaa22
                    file_url:
                new_in_version: false
                new_in_versions: []
      deprecated: false
  /api/v2/notify/updates/views:
    post:
      tags:
        - Version control
      summary: Markupdateasseen
      description: "Register a view update\n\n#### Request details\nMethod:    `POST`\n\nURL:    `/api/v2/notify/updates/views`\n\n#### Headers \n`X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_\n\n`X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_\n\n#### Parameters\n`guid` (int) **required** _[?]_\n\n`update_id` (int) **required** _Id of update where view was updated_\n\n`answer` (string) **required** _[\"no\", \"yes\"]_\n\n`type` (string) **required** _[\"newer_version\", \"new_in_version\"]_\n \n#### Response codes\n`200` OK\n\n`412` Precondition failed"
      operationId: Markupdateasseen
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
                - guid
                - update_id
                - answer
                - type
              type: object
              properties:
                guid:
                  type: integer
                  format: int32
                update_id:
                  type: integer
                  format: int32
                answer:
                  type: string
                type:
                  type: string
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/notify/messages:
    get:
      tags:
        - Messages
      summary: Messages
      description: "Get message\n\n#### Request details\nMethod:    `GET`\n\nURL:    `/api/v1/notify/messages`\n\n#### Headers \n`X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_\n\n`X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_\n\n#### Query parameters\n`platform` (string) **required** _[\"ios\", \"android\", \"windows\", \"web\"]_\n \n#### Response codes\n`200` OK\n\n`412` Precondition failed"
      operationId: Messages
      parameters:
        - name: platform
          in: query
          description: ''
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        200:
          description: ''
          headers:
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.15.8
            Transfer-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: chunked
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Cache-Control:
              content:
                text/plain:
                  schema:
                    type: string
                  example: no-cache, private
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Wed, 03 Jul 2019 10:53:42 GMT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Messages'
              example:
                data:
                  id: 25
                  message: >+
                    windows

                  show_setting: show_always
      deprecated: false
  /api/v2/notify/messages/views:
    post:
      tags:
        - Messages
      summary: Markasseen
      description: "Register a view update\n\n#### Request details\nMethod: `POST`\n\nURL: `/api/v2/notify/updates/views`\n\n#### Headers \n`X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_\n\n`X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_\n\n#### Parameters\n`guid` (int) **required** _[?]_\n\n`message_id` **required** _[?]_\n\n#### Response codes\n`200` OK\n\n`412` Precondition failed"
      operationId: Markasseen
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
                - guid
                - message_id
              type: object
              properties:
                guid:
                  type: integer
                  format: int32
                message_id:
                  type: integer
                  format: int32
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: ''
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarkAsSeenResponse'

      deprecated: false
  /api/v2/notify/rate_reminder:
    get:
      tags:
        - Rate reminders
      summary: GetShow
      description: "Get rate reminder\n\n#### Request details\nMethod: `GET`\n\nURL: `/api/v2/notify/rate_reminder`\n\n#### Headers \n`X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_\n\n`X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_\n\n#### URL Parameters\n`guid` (int?) **required** _[?]_\n\n`platform` (string) **required** _[is this used at all?]_\n\n#### Response codes\n`200` OK\n\n`412` Precondition failed\n\n`445` Entity not found"
      operationId: GetShow
      parameters:
        - name: platform
          in: query
          description: ''
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: guid
          in: query
          description: ''
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/notify/rate_reminder/views:
    post:
      tags:
        - Rate reminders
      summary: PostMarkasseen
      description: "Post rate reminder\n\n#### Request details\nMethod: `POST`\n\nURL: `/api/v2/notify/rate_reminder/views`\n\n#### Headers \n`X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_\n\n`X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_\n\n#### URL Parameters\n`guid` (int?) **required** _[?]_\n\n`platform` (string) **required** _[is this used at all?]_\n\n`answer` (string) **required** _[\"yes\", \"no\", \"later\"]_\n\n#### Response codes\n`200` OK\n\n`412` Precondition failed\n\n`445` Entity not found"
      operationId: PostMarkasseen
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
                - guid
                - platform
                - answer
              type: object
              properties:
                guid:
                  type: integer
                  format: int32
                platform:
                  type: string
                answer:
                  type: string
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/notify/rate_reminder_v2:
    get:
      tags:
        - Rate reminders V2
      summary: GetShow12
      description: "Get rate reminder\n\n#### Request details\nMethod: `GET`\n\nURL: `/api/v2/notify/rate_reminder`\n\n#### Headers \n`X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_\n\n`X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_\n\n#### URL Parameters\n`guid` (int?) **required** _[?]_\n\n`platform` (string) **required** _[is this used at all?]_\n\n#### Response codes\n`200` OK\n\n`412` Precondition failed\n\n`445` Entity not found"
      operationId: GetShow12
      parameters:
        - name: guid
          in: query
          description: ''
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/notify/rate_reminder_v2/events:
    post:
      tags:
        - Rate reminders V2
      summary: ActionEvents
      description: "Post rate reminder\n\n#### Request details\nMethod: `POST`\n\nURL: `/api/v2/notify/rate_reminder/views`\n\n#### Headers \n`X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_\n\n`X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_\n\n#### URL Parameters\n`guid` (int?) **required** _[?]_\n\n`platform` (string) **required** _[is this used at all?]_\n\n`answer` (string) **required** _[\"yes\", \"no\", \"later\"]_\n\n#### Response codes\n`200` OK\n\n`412` Precondition failed\n\n`445` Entity not found"
      operationId: ActionEvents
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionEventsRequest'
            example:
              guid: hasfdda-safsafad-asdasd-asdas
              action: masiakla-tutaj
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/notify/rate_reminder_v2/2/answers:
    post:
      tags:
        - Rate reminders V2
      summary: Answer
      description: "Post rate reminder\n\n#### Request details\nMethod: `POST`\n\nURL: `/api/v2/notify/rate_reminder/views`\n\n#### Headers \n`X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_\n\n`X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_\n\n#### URL Parameters\n`guid` (int?) **required** _[?]_\n\n`platform` (string) **required** _[is this used at all?]_\n\n`answer` (string) **required** _[\"yes\", \"no\", \"later\"]_\n\n#### Response codes\n`200` OK\n\n`412` Precondition failed\n\n`445` Entity not found"
      operationId: Answer
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerRequest'
            example:
              guid: hasfdda-safsafad-asdasd-asdas
              answer: negative
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/notify/rate_reminder_v2/actions:
    get:
      tags:
        - Rate reminders V2
      summary: Actions
      description: "Get rate reminder\n\n#### Request details\nMethod: `GET`\n\nURL: `/api/v2/notify/rate_reminder/actions`\n\n#### Headers \n`X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_\n\n`X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_\n\n#### Response codes\n`200` OK\n\n`445` Entity not found"
      operationId: Actions
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/geographic/continents:
    get:
      tags:
        - Continents
      summary: GetIndex
      description: "Retrieve a list of valid continents on Earth\n\n#### Request details\nMethod:    `GET`\n\nURL:    `/api/v2/geographic/continents`\n\n#### Headers \n`X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_\n\n`X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_\n\n#### Response codes(s)\n`200` OK"
      operationId: GetIndex
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/geographic/continents/1:
    get:
      tags:
        - Continents
      summary: GetShow123
      description: "Retrieve a list of valid continents on Earth\n\n#### Request details\nMethod:    `GET`\n\nURL:    `/api/v2/geographic/continents/{id}`\n\n#### Headers \n`X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_\n\n`X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_\n\n#### Response codes(s)\n`200` OK\n\n`404` Not found"
      operationId: GetShow123
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/geographic/countries:
    get:
      tags:
        - Countries
      summary: GetIndex1
      description: "Retrieve a list of valid countries on Earth\n\n#### Request details\nMethod:    `GET`\n\nURL:    `/api/v2/geographic/countries`\n\n#### Headers \n`X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_\n\n`X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_\n\n#### Query parameters (filters)\n`limit` (int) _Eg: [/api/geographic/countries?limit=1] Default limit is 500_\n\n`order_by_column` (string) _Eg; [/api/geographic/countries?order\\_by\\_column=name]_\n\n`order_by_direction` (string) _Eg; [/api/geographic/countries?order\\_by\\_direction=asc]_\n\n`search` (string) _Eg: [/api/geographic/countries?search=Andorra]_\n\n`fields` (string) _Eg: [/api/geographic/countries?fields=name,code]_\n\n`continents` (string) _Eg: [/api/geographic/countries?continents=EU,AF]_\n\n#### Response codes(s)\n`200` OK\n\n`412` Precondition failed _Invalid filters_"
      operationId: GetIndex1
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/geographic/countries/4:
    get:
      tags:
        - Countries
      summary: GetShow1234
      description: >-
        Retrieve details of a specific country on Earth


        #### Request details

        Method:    `GET`


        URL:    `/api/v2/geographic/countries/{id}`


        #### Headers

        `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_


        `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_


        #### URL Parameters

        `id` (int) **required** _Country id_


        #### Response codes(s)

        `200` OK


        `404` Entity not found
      operationId: GetShow1234
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        200:
          description: ''
          headers: {}
        404:
          description: 'Entity not found'
      deprecated: false
  /api/v2/geographic/languages:
    get:
      tags:
        - Languages
      summary: GetIndex12
      description: "Retrieve a list of valid languages spoken by humans on Earth\n\n#### Request details\nMethod:    `GET`\n\nURL:    `/api/v2/geographic/languages`\n\n#### Headers \n`X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_\n\n`X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_\n\n#### Query parameters (filters)\n`limit` (int) _Eg: [/api/geographic/languages?limit=1] Default limit is 500_\n\n`search` (string) _Eg: [/api/geographic/languages?search=en]_\n\n`fields` (string) _Eg: [/api/geographic/languages?fields=name,locale]_\n\n#### Response codes(s)\n`200` OK\n\n`412` Precondition failed _Invalid filters_"
      operationId: GetIndex12
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/geographic/ip-address:
    get:
      tags:
        - IP Addresses
      summary: GetShow12345
      description: "Retrieve details based on the requestee's ip address\n\n#### Request details\nMethod:    `GET`\n\nURL:    `/api/v2/geographic/ip-address`\n\n#### Headers \n`X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_\n\n`X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_\n\n#### Query parameters (filters)\n`ip` (string) _Eg: [1.2.3.4] Default is your own_\n\n#### Response codes(s)\n`200` OK\n\n`404` Entity not found"
      operationId: GetShow12345
      parameters:
        - name: ip
          in: query
          description: ''
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/geographic/time_zones:
    get:
      tags:
        - Time zones
      summary: GetIndex123
      description: "Retrieve a list of valid timesones on Earth\n\n#### Request details\nMethod:    `GET`\n\nURL:    `/api/v2/geographic/timezones`\n\n#### Headers \n`X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_\n\n`X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_\n\n#### Query parameters (filters)\n`limit` (int) _Eg: [/api/geographic/timezones?limit=1] Default limit is 1000_\n\n`order` (string) _Eg: [/api/geographic/timezones?order=name:desc]_\n\n`search` (string) _[Eg: /api/geographic/timezones?search=Europe/Andorra]_\n\n`fields` (string) _[Eg: /api/geographic/timezones?fields=name,abbr]_\n\n#### Response codes(s)\n\n`200` OK\n\n`412` Precondition failed _Invalid filters_"
      operationId: GetIndex123
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/geographic/time_zones/1:
    get:
      tags:
        - Time zones
      summary: GetShow123456
      description: "Retrieve details of a timezone\n\n#### Request details\nMethod:    `GET`\n\nURL:    `/api/v2/geographic/timezones/{id}`\n\n#### Headers \n`X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_\n\n`X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_\n\n#### Response codes(s)\n\n`200` OK\n\n`445` Entity not found"
      operationId: GetShow123456
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/geographic/time_zones/by_lat_lng:
    get:
      tags:
        - Time zones
      summary: Showbylatlng
      description: "Retrieve details of a nearest timezone by lat lng\n\n#### Request details\nMethod:    `GET`\n\nURL:    `/api/v2/geographic/timezones/by_lat_lng`\n\n#### Headers \n`X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_\n\n`X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_\n\n#### Query parameters\n`lat_lng` (double,double) _Eg: 55.1231,12.1231_\n\n#### Response codes(s)\n\n`200` OK\n\n`412` Preconditions Failed (Missing ?lat_lng=)\n\n`404` Entity not found"
      operationId: Showbylatlng
      parameters:
        - name: lat_lng
          in: query
          description: ''
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/ugc/feedbacks:
    post:
      tags:
        - UGC
      summary: Feedback
      description: "#### Request details\n\nMethod:    `POST`\n\nURL:    `/api/v2/ugc/feedbacks`\n\n#### Headers \n\n`X-Application-Id`\n\n`X-Rest-Api-Key`\n\n#### Response codes(s)\n\n`200` OK\n\n`412` Validation failed\n\n#### Post params\n\n`type` (string: feedback, bug) **optional, default is feedback**\n\n`platform` (string: web, ios, android, unknown) **optional, default is unknown**\n\n`os` (string) **optional**\n\n`app_version` (string) **optional**\n\n`device` (string) **optional**\n\n`name` (string) **optional**\n\n`email` (string) **optional**\n\n`message` (string) **optional**\n\n`image` (jpg,jpeg,png) **optional**\n\n`meta` (array/dict, (full flexiable)) **optional**\n\n`breadcrumbs` (array, {event (required): string, timestamp (required): Y-m-d H:i:s, meta (optional): array) **optional**"
      operationId: Feedback
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
                - breadcrumbs[0][meta]
                - os
                - device
                - app_version
                - name
                - email
                - message
                - image
                - type
                - platform
                - meta[key]
                - breadcrumbs[0][event]
                - breadcrumbs[0][timestamp]
              type: object
              properties:
                breadcrumbs[0][meta]:
                  type: string
                os:
                  type: string
                device:
                  type: string
                app_version:
                  type: string
                name:
                  type: string
                email:
                  type: string
                message:
                  type: string
                image:
                  type: string
                type:
                  type: string
                platform:
                  type: string
                meta[key]:
                  type: string
                breadcrumbs[0][event]:
                  type: string
                breadcrumbs[0][timestamp]:
                  type: string
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/ugc/results:
    post:
      tags:
        - UGC
      summary: Result
      description: "#### Request details\nMethod:    `POST`\n\nURL:    `/api/v2/ugc/feedbacks`\n\n#### Headers \n`X-Application-Id`\n\n`X-Rest-Api-Key`\n\n#### Response codes(s)\n`200` OK\n\n`412` Validation failed\n\n#### Post params\n`key` (string) **required**\n\n`user` (string) **required**\n\n`answer` (string) **required**\n\n`points` (int) **required**\n\n`tag` (string) **required**"
      operationId: Result
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
                - key
                - user
                - answer
                - points
                - tag
              type: object
              properties:
                key:
                  type: string
                user:
                  type: string
                answer:
                  type: array
                  items:
                    type: integer
                    format: int32
                  description: ''
                points:
                  type: integer
                  format: int32
                tag:
                  type: string
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/ugc/push-logs:
    post:
      tags:
        - UGC
      summary: PushLogs
      description: "#### Request details\nMethod:    `POST`\n\nURL:    `/api/v2/ugc/push-logs`\n\n#### Headers \n`X-Application-Id`\n\n`X-Rest-Api-Key`\n\n#### Response codes(s)\n`201` Created\n\n`412` Validation failed\n\n#### Post params\n`provider` (string) **required** (fx fcm, urban-airship)\n\n`key` (string) **required** (App key in fcm / ua)\n\n`type` (string) **required** (fx standard, freind-request, taxi-arrived etc)\n\n`succeeded` (bool) **required** (Did push get sent?)\n\n`request` (json) **optional** (Insert everything passed to provider)\n\n`response` (json) **optional** (Insert everything received from provider)\n\n`user_id` (int/string) **optional** (User id)\n\n`relation_type` (string) **optional** (Fx Booking, Company etc)\n\n`relation_id` (int) **optional** (Fx Id of Booking, id of Company etc)"
      operationId: PushLogs
      parameters:
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PushLogsRequest'
            example:
              provider: fcm
              key: my fcm key
              type: standard
              succeeded: true
              request: {}
              response: {}
              user_id: 1
        required: true
        x-send-file-in-body: false
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/validator/email:
    get:
      tags:
        - Validator
      summary: Email
      description: >-
        Validate email syntax

        On top of a simple syntax validation, there is DNS check also



        #### Request details

        Method: `GET`


        URL: `/api/v2/validator/email`


        #### Headers

        `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_


        `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_


        #### Query params

        `email` (string) **required** _email to validate_


        #### Response codes

        `200` OK


        `412` Precondition failed (missing or invalid email)
      operationId: Email
      parameters:
        - name: email
          in: query
          description: ''
          required: true
          style: form
          explode: true
          schema:
            type: string
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/validator/phone:
    get:
      tags:
        - Validator
      summary: Phone
      description: >-
        Validate phone number


        #### Request details

        Method: `GET`


        URL: `/api/v2/validator/phone`


        #### Headers

        `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_


        `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_


        #### Query params

        `phone` (string) **required** _email to validate_


        `fallback_country_code` (string) _Eg: ["dk", "gb", ...] - default is dk_


        `twilio` (bool) _Validate against Twilio - Paid service!_


        `twilio_type` (string) _Eg: ["all", "mobile", "landline"]_


        #### Response codes

        `200` OK


        `412` Precondition failed (missing or invalid email)
      operationId: Phone
      parameters:
        - name: phone
          in: query
          description: ''
          required: true
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      responses:
        200:
          description: ''
          headers: {}
      deprecated: false
  /api/v2/open:
    post:
      tags:
        - App open
      summary: Appopen
      description: "Retrieve a list of valid continents on Earth\n\n#### Request details\nMethod:    `GET`\n\nURL:    `/api/v2/open`\n\n#### Headers \n`X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_\n\n`X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_\n\n`N-Meta` (string) **required** _eg: android;production;1.2.3;4.4;Samsung S7_\n\n`Accept-Language` (string) **Optional** _eg: da-DK_\n\n### Form-data\n\n`platform` (string) **required** eg: ios/android/web\n\n`guid` (string) **required** `unique generated string` *eg: 9bc4b39a-0af5-4b54-a5a5-88ad334dbd4b*\n\n`version` (string) **required if not web** `format: xxx.yyy.zzz` *eg: 2.0.0 / 212.01.1*\n - *Current version of application*\n\n`old_version` (string) **required if not web** `format: xxx.yyy.zzz` *eg: 2.0.0 / 212.01.1*\n - *Previous version of application (Auto update can have happened)*\n\n`last_updated` (date time, ISO8601) **optional** *eg: 2019-06-15T14:29:50+00:00*\n - *Set timestamp from last app open (when localization has been synced), this will calculate which localizations should be updated*\n\n`dev` (bool) **option, default false**\n - *if true, bypass publishes and only use newest resource (set of key/values)*\n \n`test` (bool) **option, default false**\n - *if true, used the app version from \"test env\"\n \n\n#### Response codes(s)\n`200` OK"
      operationId: Appopen
      parameters:
        - name: test
          in: query
          description: ''
          required: true
          style: form
          explode: true
          schema:
            type: boolean
        - name: X-Application-Id
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: X-Rest-Api-Key
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: Accept-Language
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
        - name: N-Meta
          in: header
          description: ''
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
                - platform
                - guid
                - version
                - last_updated
                - dev
              type: object
              properties:
                platform:
                  type: string
                guid:
                  type: string
                version:
                  type: string
                last_updated:
                  type: string
                dev:
                  type: boolean
        required: false
        x-send-file-in-body: false
      responses:
        200:
          description: ''
          headers:
            Server:
              content:
                text/plain:
                  schema:
                    type: string
                  example: nginx/1.15.8
            Transfer-Encoding:
              content:
                text/plain:
                  schema:
                    type: string
                  example: chunked
            Connection:
              content:
                text/plain:
                  schema:
                    type: string
                  example: keep-alive
            Cache-Control:
              content:
                text/plain:
                  schema:
                    type: string
                  example: no-cache, private
            Date:
              content:
                text/plain:
                  schema:
                    type: string
                  example: Mon, 17 Jun 2019 05:26:58 GMT
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppOpen'
              example:
                data:
                  count: 74
                  update:
                    newer_version:
                      state: yes
                      last_id: 621
                      version: 2.0 - 2.0
                      link: https://play.google.com/store/apps/details?id=lsretail.loyalty.android.scandlines
                      translate:
                        title: New version is out, please update
                        message: ''
                        positiveBtn: Update
                        negativeBtn: Cancel
                  localize:
                    - id: 938
                      url: http://nodes-cdn-development.imgix.net/nstack/data/localize-publishes/publish-938-7dm9lHlX_Hib2twmfLJ.json
                      last_updated_at: '"2019-06-16T14:29:50+00:00"'
                      should_update: true
                      language:
                        id: 56
                        name: English
                        locale: en_EN
                        direction: LRM
                        is_default: false
                        is_best_fit: false
                    - id: 939
                      url: http://nodes-cdn-development.imgix.net/nstack/data/localize-publishes/publish-939-KmYE8Ceq_m3r3U4K0Ok.json
                      last_updated_at: '"2019-06-16T14:44:30+00:00"'
                      should_update: true
                      language:
                        id: 6
                        name: Danish
                        locale: da-DK
                        direction: LRM
                        is_default: true
                        is_best_fit: true
                    - id: 940
                      url: http://nstack.test/api/v2/localize/resources/940
                      last_updated_at: '"2019-06-16T15:00:59+00:00"'
                      should_update: true
                      language:
                        id: 44
                        name: Swedish
                        locale: sv-SE
                        direction: LRM
                        is_default: false
                        is_best_fit: false
                    - id: 941
                      url: http://nstack.test/api/v2/localize/resources/941
                      last_updated_at: '"2019-06-16T15:00:59+00:00"'
                      should_update: true
                      language:
                        id: 9
                        name: German (Germany)
                        locale: de-DE
                        direction: LRM
                        is_default: false
                        is_best_fit: false
                    - id: 942
                      url: http://nstack.test/api/v2/localize/resources/942
                      last_updated_at: '"2019-06-16T15:00:59+00:00"'
                      should_update: true
                      language:
                        id: 36
                        name: Polish
                        locale: pl-PL
                        direction: LRM
                        is_default: false
                        is_best_fit: false
                  platform: android
                  created_at: '"2019-06-17T05:26:58+00:00"'
                  last_updated: '"2019-06-15T14:29:50+00:00"'
                meta:
                  accept_Language: null
      deprecated: false
components:
  schemas:
    Indexlanguages:
      title: Indexlanguages
      required:
        - data
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Datum'
          description: ''
      example:
        data:
          - id: 11
            name: English (UK)
            locale: en-GB
            direction: LRM
            is_default: true
            is_best_fit: true
          - id: 14
            name: Spanish (Spain)
            locale: es-ES
            direction: LRM
            is_default: false
            is_best_fit: false
          - id: 6
            name: Danish
            locale: da-DK
            direction: LRM
            is_default: false
            is_best_fit: false
    Datum:
      title: Datum
      required:
        - id
        - name
        - locale
        - direction
        - is_default
        - is_best_fit
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        locale:
          type: string
        direction:
          type: string
        is_default:
          type: boolean
        is_best_fit:
          type: boolean
      example:
        id: 11
        name: English (UK)
        locale: en-GB
        direction: LRM
        is_default: true
        is_best_fit: true
    Languagebestfit:
      title: Languagebestfit
      required:
        - data
        - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data'
        meta:
          $ref: '#/components/schemas/Meta'
      example:
        data:
          id: 11
          name: English (UK)
          locale: en-GB
          direction: LRM
          is_default: false
          is_best_fit: false
        meta:
          Accept-Language: null
    Data:
      title: Data
      required:
        - id
        - name
        - locale
        - direction
        - is_default
        - is_best_fit
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        locale:
          type: string
        direction:
          type: string
        is_default:
          type: boolean
        is_best_fit:
          type: boolean
      example:
        id: 11
        name: English (UK)
        locale: en-GB
        direction: LRM
        is_default: false
        is_best_fit: false
    Meta:
      title: Meta
      required:
        - Accept-Language
      type: object
      properties:
        Accept-Language:
          type: string
      example:
        Accept-Language: null

    Language:
      title: Language
      required:
        - id
        - name
        - locale
        - direction
        - is_default
        - is_best_fit
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        locale:
          type: string
        direction:
          type: string
        is_default:
          type: boolean
        is_best_fit:
          type: boolean
      example:
        id: 11
        name: English (UK)
        locale: en-GB
        direction: LRM
        is_default: true
        is_best_fit: true
    Showresource:
      title: Showresource
      required:
        - data
        - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data2'
        meta:
          $ref: '#/components/schemas/Meta2'
      example:
        data:
          default:
            ok: Ok
            required: Required
            cancel: Cancel
            done: Done
            male: Male
            female: Female
            errorRandomErrorAlertText: An error has occurred
            ago: ago
            now: now
            open: Open
            openLinkTitle: Open link?
            openLinkMessage: This will open the link in a web browser outside of this app. Do you want to continue?
            justNow: just now
            aMinuteAgo: 1m
        meta:
          language:
            id: 11
            name: English (UK)
            locale: en-GB
            direction: LRM
            is_default: false
            is_best_fit: false
          platform:
            id: 15
            slug: mobile

    Platform:
      title: Platform
      required:
        - id
        - slug
      type: object
      properties:
        id:
          type: integer
          format: int32
        slug:
          type: string
      example:
        id: 15
        slug: mobile
    Messages:
      title: Messages
      required:
        - data
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Data3'
      example:
        data:
          id: 25
          message: >+
            windows

          show_setting: show_always
    ActionEventsRequest:
      title: ActionEventsRequest
      required:
        - guid
        - action
      type: object
      properties:
        guid:
          type: string
        action:
          type: string
      example:
        guid: hasfdda-safsafad-asdasd-asdas
        action: masiakla-tutaj
    AnswerRequest:
      title: AnswerRequest
      required:
        - guid
        - answer
      type: object
      properties:
        guid:
          type: string
        answer:
          type: string
      example:
        guid: hasfdda-safsafad-asdasd-asdas
        answer: negative
    AppOpen:
      title: App Open
      required:
        - data
        - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AppOpenData'
        meta:
          $ref: '#/components/schemas/AppOpenMeta'
      example:
        data:
          count: 74
          update:
            newer_version:
              state: yes
              last_id: 621
              version: 2.0 - 2.0
              link: https://play.google.com/store/apps/details?id=lsretail.loyalty.android.scandlines
              translate:
                title: New version is out, please update
                message: ''
                positiveBtn: Update
                negativeBtn: Cancel
          localize:
            - id: 938
              url: http://nodes-cdn-development.imgix.net/nstack/data/localize-publishes/publish-938-7dm9lHlX_Hib2twmfLJ.json
              last_updated_at: '"2019-06-16T14:29:50+00:00"'
              should_update: true
              language:
                id: 56
                name: English
                locale: en_EN
                direction: LRM
                is_default: false
                is_best_fit: false
            - id: 939
              url: http://nodes-cdn-development.imgix.net/nstack/data/localize-publishes/publish-939-KmYE8Ceq_m3r3U4K0Ok.json
              last_updated_at: '"2019-06-16T14:44:30+00:00"'
              should_update: true
              language:
                id: 6
                name: Danish
                locale: da-DK
                direction: LRM
                is_default: true
                is_best_fit: true
            - id: 940
              url: http://nstack.test/api/v2/localize/resources/940
              last_updated_at: '"2019-06-16T15:00:59+00:00"'
              should_update: true
              language:
                id: 44
                name: Swedish
                locale: sv-SE
                direction: LRM
                is_default: false
                is_best_fit: false
            - id: 941
              url: http://nstack.test/api/v2/localize/resources/941
              last_updated_at: '"2019-06-16T15:00:59+00:00"'
              should_update: true
              language:
                id: 9
                name: German (Germany)
                locale: de-DE
                direction: LRM
                is_default: false
                is_best_fit: false
            - id: 942
              url: http://nstack.test/api/v2/localize/resources/942
              last_updated_at: '"2019-06-16T15:00:59+00:00"'
              should_update: true
              language:
                id: 36
                name: Polish
                locale: pl-PL
                direction: LRM
                is_default: false
                is_best_fit: false
          platform: android
          created_at: '"2019-06-17T05:26:58+00:00"'
          last_updated: '"2019-06-15T14:29:50+00:00"'
        meta:
          accept_Language: null
    AppOpenData:
      title: AppOpenData
      required:
        - count
        - update
        - localize
        - platform
        - created_at
        - last_updated
        - rate_reminder
      type: object
      properties:
        count:
          type: integer
          format: int32
        update:
          $ref: '#/components/schemas/Update'
        localize:
          type: array
          items:
            $ref: '#/components/schemas/Localize'
          description: ''
        rate_reminder:
          $ref: '#/components/schemas/RateReminder'
        platform:
          type: string
        created_at:
          type: string
        last_updated:
          type: string
      example:
        count: 74
        update:
          newer_version:
            state: yes
            last_id: 621
            version: 2.0 - 2.0
            link: https://play.google.com/store/apps/details?id=lsretail.loyalty.android.scandlines
            translate:
              title: New version is out, please update
              message: ''
              positiveBtn: Update
              negativeBtn: Cancel
        localize:
          - id: 938
            url: http://nodes-cdn-development.imgix.net/nstack/data/localize-publishes/publish-938-7dm9lHlX_Hib2twmfLJ.json
            last_updated_at: 2019-06-16T14:29:50+00:00
            should_update: true
            language:
              id: 56
              name: English
              locale: en_EN
              direction: LRM
              is_default: false
              is_best_fit: false
          - id: 939
            url: http://nodes-cdn-development.imgix.net/nstack/data/localize-publishes/publish-939-KmYE8Ceq_m3r3U4K0Ok.json
            last_updated_at: 2019-06-16T14:44:30+00:00
            should_update: true
            language:
              id: 6
              name: Danish
              locale: da-DK
              direction: LRM
              is_default: true
              is_best_fit: true
          - id: 940
            url: http://nstack.test/api/v2/localize/resources/940
            last_updated_at: 2019-06-16T15:00:59+00:00
            should_update: true
            language:
              id: 44
              name: Swedish
              locale: sv-SE
              direction: LRM
              is_default: false
              is_best_fit: false
          - id: 941
            url: http://nstack.test/api/v2/localize/resources/941
            last_updated_at: 2019-06-16T15:00:59+00:00
            should_update: true
            language:
              id: 9
              name: German (Germany)
              locale: de-DE
              direction: LRM
              is_default: false
              is_best_fit: false
          - id: 942
            url: http://nstack.test/api/v2/localize/resources/942
            last_updated_at: 2019-06-16T15:00:59+00:00
            should_update: true
            language:
              id: 36
              name: Polish
              locale: pl-PL
              direction: LRM
              is_default: false
              is_best_fit: false
        platform: android
        created_at: 2019-06-17T05:26:58+00:00
        last_updated: 2019-06-15T14:29:50+00:00
    Update:
      title: Update
      required:
        - newer_version
      type: object
      properties:
        newer_version:
          $ref: '#/components/schemas/NewerVersion'
      example:
        newer_version:
          state: yes
          last_id: 621
          version: 2.0 - 2.0
          link: https://play.google.com/store/apps/details?id=lsretail.loyalty.android.scandlines
          translate:
            title: New version is out, please update
            message: ''
            positiveBtn: Update
            negativeBtn: Cancel
    NewerVersion:
      title: NewerVersion
      required:
        - state
        - last_id
        - version
        - link
        - translate
      type: object
      properties:
        state:
          type: string
        last_id:
          type: integer
          format: int32
        version:
          type: string
        link:
          type: string
        translate:
          $ref: '#/components/schemas/Translate'
      example:
        state: yes
        last_id: 621
        version: 2.0 - 2.0
        link: https://play.google.com/store/apps/details?id=lsretail.loyalty.android.scandlines
        translate:
          title: New version is out, please update
          message: ''
          positiveBtn: Update
          negativeBtn: Cancel
    AppOpenMeta:
      title: AppOpenMeta
      required:
        - accept_Language
      type: object
      properties:
        accept_Language:
          type: string
      example:
        accept_Language: null
    TranslateImport:
      title: TranslateImport
      required:
        - submitBtn
        - title
      type: object
      properties:
        submitBtn:
          type: string
        title:
          type: string
      example:
        submitBtn: Upload file
        title: Import
    RateReminder:
      title: RateReminder
      required:
        - title
        - body
        - yesBtn
        - laterBtn
        - noBtn
        - link
      properties:
        title:
          type: string
        body:
          type: string
        yesBtn:
          type: string
        laterBtn:
          type: string
        noBtn:
          type: string
        link:
          type: string
    Scropper:
      title: Get focal point
      required:
        - xaxis
        - yaxis
        - face_bb
      properties:
        xaxis:
          type: number
          format: double
        yaxis:
          type: number
          format: double
        face_bb:
          type: array
          items:
            $ref: '#/components/schemas/FaceBb'
    FaceBb:
      title: FaceBb
      required:
        - top
        - bottom
        - left
        - right
      properties:
        bottom:
          type: number
          format: double
        left:
          type: number
          format: double
        right:
          type: number
          format: double
        top:
          type: number
          format: double
    VersionControl:
      title: Version Control
      required:
        - update
        - update_versions
        - new_in_version
      properties:
        update:
          type: string
        update_versions:
          type: array
          items:
            $ref: '#/components/schemas/UpdateVersion'
        new_in_version:
          type: boolean
    UpdateVersion:
      title: Update version
      required:
        - id
        - version
        - update
        - new_in_version
      properties:
        id:
          type: integer
        version:
          type: string
        update:
          type: string
        new_in_version:
          type: boolean
        change_log:
          type: string
        file_url:
          type: string
    MarkAsSeenResponse:
      required:
        - data
      properties:
        data:
          type: object
          required:
            - id
            - guid
            - message_id
            - created
          properties:
            id:
              type: integer
              format: int32
            guid:
              type: string
            message_id:
              type: integer
              format: int32
            created:
              type: string
              format: 'date-time'

tags:
  - name: Scropper
  - name: Stagger
  - name: Collections
  - name: Responses
  - name: Files
  - name: Localize
  - name: Dashboards
  - name: Terms
  - name: Version control
  - name: Messages
  - name: Rate reminders
  - name: Rate reminders V2
  - name: Continents
  - name: Countries
  - name: Languages
  - name: IP Addresses
  - name: Time zones
  - name: UGC
  - name: Validator
  - name: App open
  - name: Admin API